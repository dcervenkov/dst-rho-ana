#!/usr/bin/env python

import sys
import subprocess
import glob
import os

script = "./processSkim.script"
queue = "b_index"
lsf = "bsub -q"
resultBaseDir = "../hbook"
logBaseDir = "../log"

if len(sys.argv) != 2:
	print "ERROR: Wrong number of arguments"
	print "USAGE: " + sys.argv[0] + " DIR"
	sys.exit(1)

if not os.path.isdir(sys.argv[1]):
	print "ERROR: Directory " + sys.argv[1] + "doesn't exist."
	sys.exit(2)
	
indexDir = sys.argv[1]
indexFiles = glob.glob(indexDir + "/*.index")
rest, channel = indexDir.rstrip('/mc').rsplit("/",1)

resultDir = os.path.join(resultBaseDir, channel)
logDir = os.path.join(logBaseDir, channel)

jobs = []
for indexFile in indexFiles:
	indexBaseName = os.path.basename(indexFile)
	resultFile = os.path.join(resultDir, indexBaseName.replace(".index",".hbook"))
	logFile = os.path.join(logDir, indexBaseName.replace(".index",".log"))
	job = " ".join([lsf,queue,script,channel,indexFile,resultFile,logFile])
	jobs.append(job)

print "Channel: " + channel
print "Index files: " + str(len(indexFiles))

answer = raw_input("Do you want to submit the jobs? [Y/n] ") 
if answer == "" or answer == "Y" or answer == "y":
	print "Submitting..."

	if not os.path.exists(resultDir):
		os.makedirs(resultDir)

	if not os.path.exists(logDir):
		os.makedirs(logDir)
	
	for job in jobs:
		subprocess.call(job,shell=True)

elif answer == "n":
	print "Aborting..."
	sys.exit(3)

	
