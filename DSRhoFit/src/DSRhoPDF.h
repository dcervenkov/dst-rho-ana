/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef DSRHOPDFTINDEP
#define DSRHOPDFTINDEP

// ROOT includes
#include "RooRealProxy.h"

// Local includes
#include "Efficiency.h"

class DSRhoPDF : public RooAbsPdf {
public:
    DSRhoPDF() {} ;
    DSRhoPDF(const char *name, const char *title,
             RooAbsReal& _tht,
             RooAbsReal& _thb,
             RooAbsReal& _phit,
             RooAbsReal& _ap,
             RooAbsReal& _apa,
             RooAbsReal& _a0,
             RooAbsReal& _ata);
    DSRhoPDF(const DSRhoPDF& other, const char* name=0) ;
    virtual TObject* clone(const char* newname) const {return new DSRhoPDF(*this,newname);}
    inline virtual ~DSRhoPDF() { }

    Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
    Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

    RooRealProxy tht ;
    RooRealProxy thb ;
    RooRealProxy phit ;
    RooRealProxy ap ;
    RooRealProxy apa ;
    RooRealProxy a0 ;
    RooRealProxy ata ;

    Efficiency eff;

    // Angular terms from PDF x Efficiency
    Double_t f1 (const double * vars);
    Double_t f2 (const double * vars);
    Double_t f3 (const double * vars);
    Double_t f4 (const double * vars);
    Double_t f5 (const double * vars);
    Double_t f6 (const double * vars);

    // Numerical integrals of the above
    Double_t int_tht_thb_phit[6] ;

    Double_t evaluate() const;

private:
    //ClassDef(DSRhoPDF,1) // Your description goes here...
};

#endif
